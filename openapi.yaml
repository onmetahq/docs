openapi: 3.1.3
info:
  title: Introduction
  description: |
    Onmeta provides the underlying infrastructure that allows DeFi companies,
    Web3 Gaming companies, NFT marketplaces & other Dapps to allow their end
    users to exchange fiat currency for crypto tokens and crypto tokens for fiat
    currency.


  version: 1.0.0
  contact: {}
  x-logo:
    url: https://platform.onmeta.in/_next/static/media/onmetaLogoBlack.4df0e893.svg
    altText: Onmeta Logo
servers:
  - url: stg.platform.onmeta.in
  #- url: '{{configured_webhook}}'
tags:
  - name: Introduction
    description: |
      Home Page
      > On/Offramp ![Intro](images/intro-01.webp)

      > User Flow ![Flow](images/flow-01.png)


      # Integration supported.
      We support the following integration methods for our services i.e. both On and Off Ramp.

      - Widget Integration
      - API Integration
      In this document we will be discussing in detail the steps needed for widget integration in test module and then how to take the widget live. Before we dive into the integration subject, we will quickly highlight the key functionalities of our product in the following two sections.

      # Fiat Currency Supported
        1. INR
        1. PHP

      # Supported Blockchain Networks
        Builders' building any dApp on our supported blockchain networks can integrate Onmeta to easily On/Off Ramp their users. Our solution is curated for Crypto wallets, Gaming dApps, NFT Marketplaces, DeFi platforms, Crypto Exchanges.
        1. Polygon
        1. Binance Smart Chain
        1. Ethereum
        1. Arbitrum
        1. Solana  
        1. Avalanche
        1. TON
        1. Base
        1. Hedera
        1. Ronin 
        1. Immutable 
        1. DFK 
        1. Gnosis
        1. zkEVM
        1. Tron
        1. Fantom 
        1. Optimism 

      # Customizations Possible for Widget Integration.
        In the widget there are a list of customizations that we allow that you can execute through your dashboard:

        1. You can choose to have either On ramp or Off ramp or both
        1. You can choose to use Onmeta's KYC module or integrate with your own KYC 
        1. You can choose to customize the fiat currencies and tokens that list in your widget
        1. You can choose whether the user has to go through an email verification in our widget or not by choosing whether to pass the email ID of the user or not
        1. You can choose the payment channels that you would like to use
        1. You can choose the color theme of the widget from light and dark [WIP]


  - name: Widget
    description: |
      Onmeta Widget Integration
      # Prerequesite
        To get started with the widget integration and also to avail the above customisations you need to register yourselves in our Staging Dashboard. Follow the steps below to setup your account in our dashboard:
        
      > ![API Key flow](images/widget-01.png)
  - name: Onramp API
    description: Onramp API
  - name: Customer
    description: >-
      This collection is to be used to authenticate user. 

      following api requests are available within this.


      1. User Login.

      2. Refresh access token.

      3. Link User Bank account.

      4. Fetch the status of linking bank account.
       

      you will get **access token** and **refresh token** from which you can
      call subsequent api requets which need by server for request
      authorization.
  - name: Offramp API
    description: Offramp API
  - name: Webhooks
    description: Webhooks
  - name:  Tokens
    description: Fetch available token list.
  - name:  Token Quotation
    description: >-
      Get Quotation for the given token 

      sample body is as below, make sure the chainId and buyTokenAddress are
      matching..i.e valid tokenaddress from the respective chainId.


      | **parameter** | **description** |

      | --- | --- |

      | `buyTokenSymbol` | Symbol of the token needs to be purchased. |

      | `chainId` | Block chain ID - example: 137 for polygon. |

      | `fiatCurrency` | currency from which you are buying - example : "inr"
      for Indian Rupee. |

      | `fiatAmount` | Amount quantitu - example - 100 for 100 rupee |

      | `buyTokenAddress` | smart contract address of the token which needs to
      be bought. |
  - name: Orders
    description: This collection is about Onramp order related.
  - name: Webhooks
    description: >-
      This section explains the steps to configure callback urls for receiving
      events about the transaction.


      #### Configuring Webhook


      Webhooks are configured in merchant dashboard.


      Inside **Developers** section, webhook can be added and modified
  - name: Offramp Orders
    description: Offramp order creation api's
  - name: Offramp Quotation
    description: Get Offramp quotation by fiat amount.
x-tagGroups:
  - name: Home
    tags:
      - Introduction
  - name: Widget
    tags: 
      - Widget
  # - name: API
  #   tags:
  #     - Onramp API
  #     - Offramp API
  - name: Customer API
    tags:
     - Customer
  - name: Onramp
    tags:
      -  Tokens
      -  Token Quotation
      - Orders
  - name: Offramp API
    tags:
      - Offramp Orders
      - Offramp Quotation
  - name: Webhook
    tags:
      - Webhooks
paths:
  /v1/users/login:
    $ref: paths/v1_users_login.yaml
  /v1/users/refresh-token:
    $ref: paths/v1_users_refresh-token.yaml
  /v1/users/account-link:
    $ref: paths/v1_users_account-link.yaml
  /v1/users/get-bank-status/a8789a5b-5850-4ad9-b0ae-8cc41d0b64ff:
    $ref: paths/v1_users_get-bank-status_a8789a5b-5850-4ad9-b0ae-8cc41d0b64ff.yaml
  /v1/tokens:
    $ref: paths/v1_tokens_.yaml
  /v1/quote/buy:
    $ref: paths/v1_quote_buy.yaml
  /v1/orders/create:
    $ref: paths/v1_orders_create.yaml
  /v1/orders/status:
    $ref: paths/v1_orders_status.yaml
  /v1/orders/utr:
    $ref: paths/v1_orders_utr.yaml
  /v1/orders/{api_skip}:
    $ref: paths/v1_orders_{api_skip}.yaml
  /v1/orders/currencies:
    $ref: paths/v1_orders_currencies.yaml
  /v1/orders/invoice/{order_id}:
    $ref: paths/v1_orders_invoice_{order_id}.yaml
  /:
    $ref: paths.yaml
  /v1/offramp/orders/create:
    $ref: paths/v1_offramp_orders_create.yaml
  /v1/offramp/orders/status:
    $ref: paths/v1_offramp_orders_status.yaml
  /v1/offramp/orders/txnhash:
    $ref: paths/v1_offramp_orders_txnhash.yaml
  /v1/quote/sell:
    $ref: paths/v1_quote_sell.yaml
components: {}
