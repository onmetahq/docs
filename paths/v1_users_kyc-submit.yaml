post:
  tags:
    - Customer
  summary: Submit KYC Data
  description: | 
    User can submit kyc data through below API endpoint.

    **All the above data in the request body should be form-data.Make sure you submit valid KYC (Aadhaar, PAN) details**

    The below parameters are required and need to be encrypted using following code:
      - firstName, 
      -  lastName
      -  panNumber
      -  aadharNumber

    Code snippet for encryption:
    ```js
      const crypto = require("crypto")

      const encrypt = (plainText, password) => {
        try {
          const iv = crypto.randomBytes(16);
          const key = crypto.createHash('sha256').update(password).digest('base64').substr(0, 32);
          const cipher = crypto.createCipheriv('aes-256-cbc', key, iv);

          let encrypted = cipher.update(plainText);
          encrypted = Buffer.concat([encrypted, cipher.final()])
          return iv.toString('hex') + ':' + encrypted.toString('hex');

        } catch (error) {
          console.log(error);
        }
      }

      // to generate encryption
      sampleText = "apple"
      encryptedText = encrypt(sampleText, SECRET_KEY)
      console.log(encryptedText)
    ```

    For access to **SECRET_KEY** for encryption please contact **nirmal@onmeta.in**
    
    Create a POST request with above encrypted values for successfully uploading KYC data.

  operationId: submitKYCData
  parameters:
    - name: x-api-key
      in: header
      schema:
        type: string
        example: '{{api_key}}'
      description: API key from dashboard.
    - name: Authorization 
      in: header
      schema:
        type: string
        example: 'Bearer {{access_token}}'
      description: Access token from login.
  requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: krishna@onmeta.in
                selfie:
                  type: string
                  example: 
                aadharFront:
                  type: string
                  example: 
                aadharBack:
                  type: string
                  example: 
                panFront:
                  type: string
                  example: 
                panBack:
                  type: string
                  example: 
                panNumber:
                  type: string
                  example: 
                aadharNumber:
                  type: string
                  example: 
                firstName:
                  type: string
                  example: 
                lastName:
                  type: string
                  example: 
                incomeRange:
                  type: string
                  example: Income range as string from one of the options. <10L , 10L-15L, 15L-20L, 20L-25L, 25L-50L, >50L 
                profession:
                  type: string
                  example: occupation/profession of the person. Writer, Journalist, Business man
                
            examples:
              User Login:
                value:
                  email: krishna@onmeta.in
  responses:
    '200':
      description: Submit KYC Data - Success
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties: {}
              success:
                type: boolean
                example: true
          examples:
            Get KYC Status - Success:
              value:
                error: {}
                success: true
    '400':
      description: Submit KYC Data - Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties: {}
              error:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Invalid request'
              success:
                type: boolean
                example: false
          examples:
            Get KYC Status - Bad Request:
              value:
                error:
                  message: 'Invalid request'
                success: false